/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.gradle.api.artifacts.maven.MavenDeployment

apply plugin: 'maven-publish'
// FIXME: Disabling signing plugin for temporary fork
// apply plugin: 'signing'
apply plugin: 'java'

jar.baseName = 'muzei-api'
group = 'com.google.android.apps.muzei'
version = '1.0.1-slyfox-01' // FIXME: Qualified version number for temporary fork

sourceCompatibility = '1.6'

def Properties props = new Properties()
props.load(new FileInputStream(file('../local.properties')))

def android = [
        sdk: props["sdk.dir"],
        target: 'android-19'
]

allprojects { ext."signing.keyId" = props["signing.keyId"] }
allprojects { ext."signing.password" = props["signing.password"] }
allprojects { ext."signing.secretKeyRingFile" = props["signing.secretKeyRingFile"] }


sourceSets {
    main {
        java {
            srcDir 'build/source/aidl/debug'
        }
    }
}

/* FIXME: The javadoc task is broken on Windows build environments
task javadoc(type: Exec, overwrite: true, dependsOn: 'jar') {
    commandLine './javadoc-scripts/generate_javadoc.sh'
}
*/
task javadoc(overwrite: true, dependsOn: 'jar') { }

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    baseName = jar.baseName
    from 'build/javadoc'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    baseName = jar.baseName
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile files("${android.sdk}/platforms/${android.target}/android.jar")
}

// http://jedicoder.blogspot.com/2011/11/automated-gradle-project-deployment-to.html

/* FIXME: Disabling signing plugin for temporary fork
signing {
    sign configurations.archives
}
*/

publishing {
    publications {
        muzeiAPI(MavenPublication) {
            artifactId jar.baseName

            from components.java

            /*
            FIXME: The javadoc task is broken on Windows build environments
            artifact javadocJar {
                classifier 'javadoc'
            }
            */
            artifact sourcesJar {
                classifier 'sources'
            }

            pom.withXml {
                def pom = asNode()
                pom.appendNode 'name', 'Muzei API'
                pom.appendNode 'packaging', 'jar'
                pom.appendNode 'description', 'The Muzei API allows you to extend Muzei with custom sources'
                pom.appendNode 'url', 'http://api.muzei.co'

                def scm = pom.appendNode 'scm'
                scm.appendNode 'url', 'https://github.com/romannurik/muzei.git'
                scm.appendNode 'connection', 'scm:git:https://github.com/romannurik/muzei'
                scm.appendNode 'developerConnection', 'scm:git:https://github.com/romannurik/muzei'

                def licenses = pom.appendNode 'licenses'
                def license = licenses.appendNode 'license'
                license.appendNode 'name', 'The Apache Software License, Version 2.0'
                license.appendNode 'url', 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                license.appendNode 'distribution', 'repo'

                def developers = pom.appendNode 'developers'
                def developer = developers.appendNode 'developer'
                developer.appendNode 'id', 'romannurik'
                developer.appendNode 'name', 'Roman Nurik'
            }
        }
    }
}